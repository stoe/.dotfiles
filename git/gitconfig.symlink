# Local/private config goes in the include
[include]
  path = ~/.gitconfig.local

[hub]
  protocol = ssh

[remote "origin"]
	prune = true

[gpg]
  program = gpg

[commit]
  gpgsign = true

[color]
  diff = auto
  status = auto
  branch = auto
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = green
  changed = yellow
  untracked = cyan

[core]
  # Use custom `.gitignore` and `.gitattributes`
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
  editor = atom --wait
	autocrlf = input
  pager = ""

[apply]
  whitespace = nowarn

[diff]
	tool = Kaleidoscope
[difftool]
	prompt = false
[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[merge]
	tool = Kaleidoscope
[mergetool]
  keepBackup = false
	prompt = false
[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
  trustExitCode = true

[help]
  autocorrect = 1

[push]
  # See `git help config` (search for push.default)
  # for more information on different options of the below setting.
  #
  # Setting to git 2.0 default to surpress warning message
	default = simple

[alias]
  # View abbreviated SHA, description, and history graph
  l = log --oneline --decorate --graph --abbrev-commit --all --date=relative
  lg = log --pretty=format:'%Cred%h%Creset -%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  # View the current working tree status using the short format w/ branch info
  # upgrade your git if -sb breaks for you. it's fun.
  s = status -sb
  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v
  # http://haacked.com/archive/2014/07/28/github-flow-aliases/#completing-the-pull-request
  co = checkout
  cob = checkout -b
  ec = config --global -e
  bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs git branch -d; }; f"
  # show who you are committing as
  # https://gist.github.com/loranallensmith/0350db8a91578f40e471d322cf244d45
  me = !git config --get user.name && git config --get user.email

[filter "lfs"]
  required = true
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
