{
    "root":         true,

    /* http://eslint.org/docs/user-guide/configuring#specifying-environments */
    "env":          {
        "browser":       true,
        "node":          true,
        "commonjs":      false,
        "worker":        false,
        "amd":           false,
        "mocha":         false,
        "jasmine":       false,
        "jest":          false,
        "phantomjs":     false,
        "qunit":         false,
        "jquery":        false,
        "prototypejs":   false,
        "shelljs":       false,
        "meteor":        false,
        "mongo":         false,
        "applescript":   false,
        "serviceworker": false,
        "embertest":     false,
        "es6":           false
    },

    /* http://eslint.org/docs/user-guide/configuring#specifying-parser */
    //"parser":       "babel-eslint",

    /* http://eslint.org/docs/user-guide/configuring#specifying-globals */
    "globals":      { },

    /* http://eslint.org/docs/user-guide/configuring#configuring-plugins */
    //"plugins":      [ ],

    /* http://eslint.org/docs/user-guide/configuring#specifying-language-options */
    "ecmaFeatures": {
        "arrowFunctions":                   false,
        "binaryLiterals":                   false,
        "blockBindings":                    false,
        "classes":                          false,
        "defaultParams":                    false,
        "destructuring":                    false,
        "forOf":                            false,
        "generators":                       false,
        "modules":                          false,
        "objectLiteralComputedProperties":  false,
        "objectLiteralDuplicateProperties": false,
        "objectLiteralShorthandMethods":    false,
        "objectLiteralShorthandProperties": false,
        "octalLiterals":                    false,
        "regexUFlag":                       false,
        "regexYFlag":                       false,
        "restParams":                       false,
        "spread":                           false,
        "superInFunctions":                 false,
        "templateStrings":                  false,
        "unicodeCodePointEscapes":          false,
        "globalReturn":                     false,
        "jsx":                              false,
        "experimentalObjectRestSpread":     false
    },

    /* http://eslint.org/docs/user-guide/configuring#configuring-rules */
    /* http://eslint.org/docs/rules/ */
    //    0 - turn the rule off
    //    1 - turn the rule on as a warning (doesn't affect exit code)
    //    2 - turn the rule on as an error (exit code is 1 when triggered)
    "rules":        {
        // Possible Errors ---------------------------------------------------------------------------------------------
        // The following rules point out areas where you might have made mistakes.
        "comma-dangle":                "never",
        "no-cond-assign":              "always",
        "no-console":                  1,
        "no-constant-condition":       2,
        "no-control-regex":            2,
        "no-debugger":                 2,
        "no-dupe-args":                2,
        "no-dupe-keys":                2,
        "no-duplicate-case":           2,
        "no-empty-character-class":    2,
        "no-empty":                    2,
        "no-ex-assign":                2,
        "no-extra-boolean-cast":       1,
        "no-extra-parens":             "all",
        "no-extra-semi":               2,
        "no-func-assign":              1,
        "no-inner-declarations":       "both",
        "no-invalid-regexp":           2,
        "no-irregular-whitespace":     1,
        "no-negated-in-lhs":           1,
        "no-obj-calls":                2,
        "no-regex-spaces":             1,
        "no-sparse-arrays":            1,
        "no-unreachable":              1,
        "use-isnan":                   1,
        "valid-jsdoc":                 2,
        "valid-typeof":                1,
        "no-unexpected-multiline":     1,

        // Best Practices ----------------------------------------------------------------------------------------------
        // These are rules designed to prevent you from making mistakes.
        // They either prescribe a better way of doing something or help you avoid footguns.
        "accessor-pairs":              [ 1, { "getWithoutSet": true, "setWithoutget": true } ],
        "block-scoped-var":            2,
        "complexity":                  [ 2, 3 ],
        "consistent-return":           2,
        "curly":                       [ 2, "all" ],
        "default-case":                2,
        "dot-notation":                [ 2, { "allowKeywords": false } ],
        "dot-location":                [ 2, "property" ],
        "eqeqeq":                      2,
        "guard-for-in":                2,
        "no-alert":                    2,
        "no-caller":                   2,
        "no-div-regex":                1,
        "no-else-return":              2,
        "no-empty-label":              0,
        "no-eq-null":                  2,
        "no-eval":                     2,
        "no-extend-native":            [ 2, { "exceptions": [ "Object" ] } ],
        "no-extra-bind":               2,
        "no-fallthrough":              2,
        "no-floating-decimal":         2,
        "no-implicit-coercion":        [ 2, { "boolean": true, "number": true, "string": true } ],
        "no-implied-eval":             2,
        "no-invalid-this":             2,
        "no-iterator":                 2,
        "no-labels":                   2,
        "no-lone-blocks":              2,
        "no-loop-func":                2,
        "no-multi-spaces":             2,
        "no-multi-str":                2,
        "no-native-reassign":          2,
        "no-new-func":                 2,
        "no-new-wrappers":             2,
        "no-new":                      2,
        "no-octal-escape":             1,
        "no-octal":                    1,
        "no-param-reassign":           2,
        "no-process-env":              2,
        "no-proto":                    2,
        "no-redeclare":                2,
        "no-return-assign":            "except-parens",
        "no-script-url":               2,
        "no-self-compare":             2,
        "no-sequences":                2,
        "no-throw-literal":            2,
        "no-unused-expressions":       2,
        "no-useless-call":             2,
        "no-void":                     2,
        "no-warning-comments":         [ 1, { "terms": [ "todo", "fixme", "xxx" ], "location": "start" } ],
        "no-with":                     2,
        "radix":                       2,
        "vars-on-top":                 2,
        "wrap-iife":                   2,
        "yoda":                        "always",

        // Strict Mode -------------------------------------------------------------------------------------------------
        // These rules relate to using strict mode.
        "strict":                      [ 2, "function" ],

        // Variables ---------------------------------------------------------------------------------------------------
        // These rules have to do with variable declarations.
        "init-declarations":           [ 2, "never" ],
        "no-catch-shadow":             2,
        "no-delete-var":               2,
        "no-label-var":                2,
        "no-shadow-restricted-names":  2,
        "no-shadow":                   2,
        "no-undef-init":               2,
        "no-undef":                    2,
        "no-undefined":                1,
        "no-unused-vars":              [ 2, { "vars": "local", "args": "none" } ],
        "no-use-before-define":        2,

        // Node.js -----------------------------------------------------------------------------------------------------
        // These rules are specific to JavaScript running on Node.js.
        "callback-return":             [ 2, [ "callback", "cb", "next" ] ],
        "handle-callback-err":         2,
        "no-mixed-requires":           [ 1, true ],
        "no-new-require":              2,
        "no-path-concat":              2,
        "no-process-exit":             2,
        "no-restricted-modules":       0,
        "no-sync":                     2,

        // Stylistic Issues --------------------------------------------------------------------------------------------
        // These rules are purely matters of style and are quite subjective.
        "array-bracket-spacing":       [ 2, "always" ],
        "block-spacing":               [ 2, "always" ],
        "brace-style":                 [ 2, "1tbs", { "allowSingleLine": false } ],
        "camelcase":                   [ 2, { "properties": "always" } ],
        "comma-spacing":               [ 2, { "before": false, "after": true } ],
        "comma-style":                 [ 2, "last" ],
        "computed-property-spacing":   [ 2, "never" ],
        "consistent-this":             [ 1, "me" ],
        "eol-last":                    2,
        "func-names":                  1,
        "func-style":                  [ 2, "declaration" ], // "declaration" || "expression"
        "id-length":                   [ 2, { "min": 2, "max": 10, "exceptions": [ "x", "y" ] } ],
        "id-match":                    [ 2, "^[a-z]+([A-Z][a-z]+)*$", { "properties": true } ],
        "indent":                      [ 2, 4, { "VariableDeclarator": 2 } ],
        "key-spacing":                 [ 2, { "align": "value" } ],
        "lines-around-comment":        [
            2, {
                "beforeBlockComment": true,
                "beforeLineComment":  true,
                "allowBlockStart":    true,
                "allowBlockEnd":      true
            }
        ],
        "linebreak-style":             [ 1, "unix" ],
        "max-nested-callbacks":        [ 2, 3 ],
        "new-cap":                     2,
        "new-parens":                  2,
        "newline-after-var":           [ 2, "always" ],
        "no-array-constructor":        2,
        "no-continue":                 1,
        "no-inline-comments":          0,
        "no-lonely-if":                2,
        "no-mixed-spaces-and-tabs":    2,
        "no-multiple-empty-lines":     [ 1, { "max": 1 } ],
        "no-nested-ternary":           2,
        "no-new-object":               2,
        "no-spaced-func":              2,
        "no-ternary":                  0,
        "no-trailing-spaces":          1,
        "no-underscore-dangle":        2,
        "no-unneeded-ternary":         2,
        "object-curly-spacing":        [ 2, "always" ],
        "one-var":                     [ 2, "always" ],
        "operator-assignment":         [ 2, "always" ],
        "operator-linebreak":          [ 2, "after" ],
        "padded-blocks":               [ 1, "always" ],
        "quote-props":                 [ 2, "as-needed" ],
        "quotes":                      [ 1, "single", "avoid-escape" ],
        "semi-spacing":                [ 2, { "before": false, "after": true } ],
        "semi":                        [ 2, "always" ],
        "sort-vars":                   0,
        "space-after-keywords":        [ 2, "always" ],
        "space-before-blocks":         [ 2, "always" ],
        "space-before-function-paren": [ 2, "never" ],
        "space-in-parens":             [ 2, "never" ],
        "space-infix-ops":             2,
        "space-return-throw-case":     2,
        "space-unary-ops":             [ 1, { "words": true, "nonwords": false } ],
        "spaced-comment":              [ 2, "always" ],
        "wrap-regex":                  2,

        // ECMAScript 6 ------------------------------------------------------------------------------------------------
        // These rules are only relevant to ES6 environments.
        "arrow-parens":                [ 2, "always" ],
        "arrow-spacing":               [ 2, { "before": true, "after": true } ],
        "constructor-super":           2,
        "generator-star-spacing":      [ 2, "both" ],
        "no-class-assign":             2,
        "no-const-assign":             2,
        "no-dupe-class-members":       2,
        "no-this-before-super":        2,
        "no-var":                      1,
        "object-shorthand":            [ 1, "always" ],
        "prefer-arrow-callback":       1,
        "prefer-const":                1,
        "prefer-spread":               0,
        "prefer-reflect":              0,
        "prefer-template":             1,
        "require-yield":               1,

        // Legacy ------------------------------------------------------------------------------------------------------
        // The following rules are included for compatibility with JSHint and JSLint.
        // While the names of the rules may not match up with the JSHint/JSLint counterpart, the functionality is the same.
        "max-depth":                   [ 2, 3 ],
        "max-len":                     [ 2, 120, 4, { "ignoreComments": true, "ignoreUrls": true } ],
        "max-params":                  [ 1, 5 ],
        "max-statements":              0,
        "no-bitwise":                  1,
        "no-plusplus":                 0
    }
}
