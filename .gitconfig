# Local/private config goes in the include
[include]
  path = ~/.gitconfig.local

[hub]
  protocol = ssh

# [http]
#   sslVerify = false

[protocol]
  version = 2

[remote "origin"]
  prune = true

[gpg]
  program = /usr/local/bin/gpg
  # format = x509

[gpg "x509"]
  program = smimesign

[commit]
  gpgsign = true

[tag]
  forceSignAnnotated = true

[color]
  diff = auto
  status = auto
  branch = auto
  ui = auto

[color "branch"]
  current = cyan reverse
  local = yellow bold
  remote = green bold

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = green bold
  changed = yellow bold
  untracked = cyan bold

[core]
  # Use custom `.gitignore` and `.gitattributes`
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
  editor = code --wait
  autocrlf = input
  pager = ""

[apply]
  whitespace = nowarn

[diff]
  tool = Kaleidoscope

[difftool]
  prompt = false

[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[difftool "icdiff"]
  # https://github.com/jeffkaufman/icdiff
  cmd = icdiff -N -U 2 $LOCAL $REMOTE

[diff "zip"]
  textconv = unzip -c -a

[merge]
  tool = Kaleidoscope

[mergetool]
  keepBackup = false
  prompt = false

[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
  trustExitCode = true

[help]
  autocorrect = 1

[push]
  # See `git help config` (search for push.default)
  # for more information on different options of the below setting.
  #
  # Setting to git 2.0 default to surpress warning message
  default = simple

[rebase]
  autoStash = true

[alias]
  # View abbreviated SHA, description, and history graph
  l = log --oneline --decorate --graph --abbrev-commit --all --date=relative -n 10
  lg = log --pretty=format:'%C(auto)%h %G? %d %s' --graph --all -n 10
  # View the current working tree status using the short format w/ branch info
  # upgrade your git if -sb breaks for you. it's fun.
  s = status -sb
  # Show verbose output about tags, branches or remotes
  tags = tag -l
  tag = tag -s
  branches = branch -avv
  remotes = remote -v
  # http://haacked.com/archive/2014/07/28/github-flow-aliases/#completing-the-pull-request
  up = pull --rebase --prune
  co = checkout
  cob = checkout -b
  ec = config --global -e
  bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs git branch -d; }; f"
  # show who you are committing as
  # https://gist.github.com/loranallensmith/0350db8a91578f40e471d322cf244d45
  me = !git config --get user.name && git config --get user.email
  pr = pull-request
  idiff = difftool -t icdiff
  pc = !git pull && git bclean
  issues = issue -f '%sC%<(8)%i%Creset %t %n%l %n%U %n%n'
  # https://github.com/ahmadawais/Emoji-Log
  new = "!f() { git commit -m \"📦 $@\"; }; f"
  imp = "!f() { git commit -m \"🤘 $@\"; }; f"
  fix = "!f() { git commit -m \"🐛 $@\"; }; f"
  rlz = "!f() { git commit -m \"🚀 $@\" --allow-empty; git tag -s \"$@\" -m \"$@\"; }; f"
  brk = "!f() { git commit -m \"‼ $@\"; }; f"
  doc = "!f() { git commit -m \"📖 $@\"; }; f"
  tst = "!f() { git commit -m \"🤖 $@\"; }; f"
  dep = "!f() { git commit -m \"🆙 Update dependencies\"; }; f"
  typo = "!f() { git commit -m \"🔡 Fix typo\"; }; f"

[log]
  showSignature = false

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
